services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      retries: 5
      timeout: 5s

  catalog-api:
    build:
      context: Services/Catalog/Catalog.API
      dockerfile: Dockerfile
    container_name: catalog-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Host=postgres;Port=5432;Database=CatalogDb;Username=postgres;Password=postgres
    ports:
      - "6000:8080"
      - "6060:8081"
    depends_on:
      - postgres
        
  basket-api:
    build:
      context: Services/Basket/Basket.API
      dockerfile: Dockerfile
    container_name: basket-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Host=postgres;Port=5432;Database=BasketDb;Username=postgres;Password=postgres
      - ConnectionStrings__Redis=redis:6379
    ports:
      - "6001:8080"
      - "6061:8081"
    depends_on:
      - postgres
      - redis
      
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      retries: 5
      timeout: 5s

volumes:
  postgres-data:
  redis-data: